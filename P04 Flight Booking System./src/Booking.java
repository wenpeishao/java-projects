//////////////// FILE HEADER (INCLUDE IN EVERY FILE) //////////////////////////
//
// Title: P04 Flight Booking System
// Course: CS 300 Fall 2021
//
// Author: Wenpei Shao
// Email: wshao33@wisc.edu
// Lecturer: Hobbes LeGault
//
//////////////////// PAIR PROGRAMMERS COMPLETE THIS SECTION ///////////////////
//
// Partner Name: (name of your pair programming partner)
// Partner Email: (email address of your programming partner)
// Partner Lecturer's Name: (name of your partner's lecturer)
//
// VERIFY THE FOLLOWING BY PLACING AN X NEXT TO EACH TRUE STATEMENT:
// __X_ Write-up states that pair programming is allowed for this assignment.
// __X_ We have both read and understand the course Pair Programming Policy.
// __X_ We have registered our team prior to the team registration deadline.
//
///////////////////////// ALWAYS CREDIT OUTSIDE HELP //////////////////////////
//
// Persons: NONE
// Online Sources: NONE
//
///////////////////////////////////////////////////////////////////////////////
/**
 * Informational class to represent a booking in our system.
 */
public class Booking {

  // data fields associated with an individual Booking object
  private String confirmationNo; // generated by the getConfirmationNo() method
  private String seatNo; // generated by the Flight for this Booking
  private Flight flight;
  private Traveler traveler;

  // for use in the generateConfirmationNo method; do not change
  private static int confirmationNoGenerator = 1234;

  /**
   * Attempts to book a given traveler on a given flight and create a confirmation number for the
   * booking.
   * 
   * @param t the traveler for the booking
   * @param f the Flight to book the traveler on
   * @throws RuntimeException if there is no more room on the given flight
   */
  public Booking(Traveler t, Flight f) throws RuntimeException {
    try {
      // if (t == null || f == null)
      // throw new RuntimeException("the Booking cannot be created.");
      // this.seatNo = f.getNextAvailableSeat();

      this.flight = f;
      this.traveler = t;
      this.seatNo = f.getNextAvailableSeat();
      this.confirmationNo = generateConfirmationNo();
      // or throw a RuntimeException with a descriptive message if the Booking cannot be created
    } catch (RuntimeException e) {
      throw new IllegalStateException("the Booking cannot be created.");
    }
  }

  /**
   * Accessor method for this booking's seat number
   * 
   * @return
   */
  public String getSeatNo() {
    return seatNo;
  }

  /**
   * Accessor method for this booking's confirmation number
   * 
   * @return
   */
  public String getConfirmationNo() {
    return confirmationNo;
  }

  /**
   * Private helper method to generate a confirmation number for this booking. Should only be called
   * from the constructor of this class. This implementation is provided for you.
   * 
   * @return the generated confirmation number
   */
  private String generateConfirmationNo() {
    String confirmationNo = this.traveler.getName().toUpperCase().substring(0, 3);
    confirmationNo += confirmationNoGenerator;
    confirmationNoGenerator++;
    return confirmationNo;
  }

  /**
   * Protected helper method for testing purposes to reset the confirmation number generator. Call
   * this method at the beginning of your test methods. This implementation is provided for you.
   */
  protected static void resetConfirmationNo() {
    Booking.confirmationNoGenerator = 1234;
  }

  /**
   * Creates and returns a string representation of this booking for printing, for example:
   * 
   * Name: Hobbes LeGault Confirmation Number: HOB1240 Flight Number: A234 Seat Number: B2
   * 
   * @return a string representation of this booking for printing
   */
  @Override
  public String toString() {

    return "Name: " + traveler.getName() + "\nConfirmation Number: " + getConfirmationNo()
        + "\nFlight Number: " + flight.getFlightNo() + "\nSeat Number: " + getSeatNo();
  }
  
  
  
  
  
}
